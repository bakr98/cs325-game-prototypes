// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)


/**
 * Chest
 * @param {Phaser.Game} aGame A reference to the currently running game.
 * @param {Number} aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number} aY The y coordinate (in world space) to position the Sprite at.
 * @param {any} aKey This is the image or texture used by the Sprite during rendering. It can be a string which is a reference to the Cache entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any} aFrame If this Sprite is using part of a sprite sheet or texture atlas you can specify the exact frame to use by giving a string or numeric index.
 */
function Chest(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'atlas', aFrame == undefined || aFrame == null? 'chest/chest-1' : aFrame);
	this.anchor.setTo(0.5, 0.5);
	this.animations.add('open', ['chest/chest-2'], 0, false);
	this.game.physics.arcade.enable(this);
	this.body.setSize(19.0, 12.0, 9.0, 13.0);
	this.body.gravity.y = 500.0;
	
	this.afterCreate();
	
}

/** @type Phaser.Sprite */
var Chest_proto = Object.create(Phaser.Sprite.prototype);
Chest.prototype = Chest_proto;
Chest.prototype.constructor = Chest;

/* --- end generated code --- */

Chest.prototype.afterCreate = function() {
	this.opened = false;
	this.kind = "chest";
};

Chest.prototype.open = function() {
	this.opened = true;
	this.animations.play("open");

	// spawn stars
	for (var i = 0; i <= 5; i++) {
		var temp = new Star(this.game, this.x, this.y - 15);
		this.game.add.existing(temp);
		var loot_group = this.game.state.getCurrentState().fLoot_group;		
		loot_group.add(temp);
	}
};