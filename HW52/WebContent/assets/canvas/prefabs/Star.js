// -- user code here --

/* --- start generated code --- */

// Generated by  1.5.0 (Phaser v2.6.2)
/**
 * Star
 * 
 * @param {Phaser.Game}
 *            aGame A reference to the currently running game.
 * @param {Number}
 *            aX The x coordinate (in world space) to position the Sprite at.
 * @param {Number}
 *            aY The y coordinate (in world space) to position the Sprite at.
 * @param {any}
 *            aKey This is the image or texture used by the Sprite during
 *            rendering. It can be a string which is a reference to the Cache
 *            entry, or an instance of a RenderTexture or PIXI.Texture.
 * @param {any}
 *            aFrame If this Sprite is using part of a sprite sheet or texture
 *            atlas you can specify the exact frame to use by giving a string or
 *            numeric index.
 */
function Star(aGame, aX, aY, aKey, aFrame) {
	Phaser.Sprite.call(this, aGame, aX, aY, aKey || 'atlas',
			aFrame == undefined || aFrame == null ? 'star/star-1' : aFrame);
	this.anchor.setTo(0.5, 0.5);
	var _anim_spin = this.animations.add('spin', [ 'star/star-1',
			'star/star-2', 'star/star-3', 'star/star-4', 'star/star-5',
			'star/star-6' ], 10, true);
	_anim_spin.play();
	this.game.physics.arcade.enable(this);
	this.body.bounce.x = 0.8;
	this.body.bounce.y = 0.8;
	this.body.drag.x = 10.0;
	this.body.drag.y = 10.0;
	this.body.gravity.y = 500.0;

	this.afterCreate();

}

/** @type Phaser.Sprite */
var Star_proto = Object.create(Phaser.Sprite.prototype);
Star.prototype = Star_proto;
Star.prototype.constructor = Star;

/* --- end generated code --- */

Star.prototype.afterCreate = function() {
	this.able = false;
	this.bounceCount = 0;

	this.body.velocity.y = this.game.rnd.realInRange(150, 220);
	this.body.velocity.x = this.game.rnd.realInRange(-30, 31);

	this.kind = "star";
};

Star.prototype.update = function() {

	if (this.body.onFloor()) {
		this.bounceCount++;

	}
	if (this.bounceCount >= 3) {
		this.able = true;
	}
};
